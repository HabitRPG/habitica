.container-fluid
  .row
    .col-md-6
      h2=env.t('inventory')
      p.well=env.t('inventoryText')
      menu.inventory-list(type='list')

        li.customize-menu
          menu.pets-menu(label=(env.t('eggs') + ' ({{eggCount}})'))
            p.muted(ng-show='eggCount < 1')=env.t('noEggs')
            div(ng-repeat='(egg,points) in ownedItems(user.items.eggs)')
              button.customize-option(class='Pet_Egg_{{::egg}}',
                ng-class='{selectableInventory: selectedPotion && !(user.items.pets[egg+"-"+selectedPotion.key]>0) && (Content.dropEggs[egg] || !selectedPotion.premium)}',
                popover='{{::Content.eggs[egg].notes()}}', popover-append-to-body='true',
                popover-title!=env.t("egg", {eggType: "{{::Content.eggs[egg].text()}}"}),
                popover-trigger='mouseenter', popover-placement='right',
                ng-click='chooseEgg(egg)')
                .badge.badge-info.stack-count {{points}}

        li.customize-menu
          menu.pets-menu(label=(env.t('hatchingPotions') + ' ({{potCount}})'))
            p.muted(ng-show='potCount < 1')=env.t('noHatchingPotions')
            div(ng-repeat='(pot,points) in ownedItems(user.items.hatchingPotions)')
              button.customize-option(class='Pet_HatchingPotion_{{::pot}}',
                ng-class='{selectableInventory: selectedEgg && !(user.items.pets[selectedEgg.key+"-"+pot]>0) && (Content.dropEggs[selectedEgg.key] || !Content.hatchingPotions[pot].premium)}',
                popover='{{::Content.hatchingPotions[pot].notes()}} {{::Content.hatchingPotions[pot].addlNotes()}}',
                popover-title!=env.t("potion", {potionType: "{{::Content.hatchingPotions[pot].text()}}"}),
                popover-trigger='mouseenter', popover-placement='right',
                popover-append-to-body='true',
                ng-click='choosePotion(pot)')
                .badge.badge-info.stack-count {{points}}

        li.customize-menu
          menu.pets-menu(label=env.t('quests'))
            p=env.t('whereAreMyQuests')

        li.customize-menu
          menu.pets-menu(label=env.t('food') + ' ({{foodCount}})')
            p.muted(ng-show='foodCount < 1')=env.t('noFood')
            div(ng-repeat='(food,points) in ownedItems(user.items.food)')
              button.customize-option(class='Pet_Food_{{::food}}',
                popover='{{::Content.food[food].notes()}}', popover-title='{{::Content.food[food].text()}}',
                popover-trigger='mouseenter', popover-placement='right',
                popover-append-to-body='true',
                ng-click='chooseFood(food)')
                .badge.badge-info.stack-count {{points}}

        li.customize-menu
          menu.pets-menu(label=env.t('special'))
            mixin specialItem(k)
              div(ng-if='user.items.special.#{k}')
                button.customize-option(class='inventory_special_#{k}',
                  popover='{{::Content.special.#{k}.notes()}}',
                  popover-title='{{::Content.special.#{k}.text()}}',
                  popover-trigger='mouseenter', popover-placement='right',
                  popover-append-to-body='true',
                  ng-click='castStart(Content.special.#{k})')
                  .badge.badge-info.stack-count {{user.items.special.#{k}}}
            +specialItem('snowball')
            +specialItem('spookDust')
            +specialItem('shinySeed')
            +specialItem('seafoam')

            div(ng-if='user.purchased.plan.customerId || user.purchased.plan.mysteryItems.length')
              button.customize-option(class='inventory_present inventory_present_{{moment().format("MM")}}',
                popover=env.t('subscriberItemText'), popover-trigger='mouseenter',
                popover-placement='right', popover-append-to-body='true',
                ng-click="user.ops.openMysteryItem({})")
                .badge.badge-info.stack-count {{user.purchased.plan.mysteryItems.length}}

            div(ng-if='user.purchased.plan.consecutive.trinkets')
              button.customize-option(class='inventory_special_trinket',
                popover=env.t('mysticHourglassPopover'), popover-trigger='mouseenter',
                popover-placement='right', popover-append-to-body='true',
                ng-click="$state.go('options.inventory.timetravelers')")
                .badge.badge-info.stack-count {{user.purchased.plan.consecutive.trinkets}}

            div(ng-repeat='type in Content.cardTypes', ng-init='received=type.key+"Received"', ng-show='user.items.special[received][0]')
              button.customize-option(class='inventory_special_{{::type.key}}',
                popover=env.t('cardReceivedFrom', {cardType:'{{::Content.spells.special[type.key].text()}}', userName: '{{User.user.items.special[received][0]}}'}),
                popover-trigger='mouseenter', popover-placement='right',
                popover-append-to-body='true',
                ng-click='openCardsModal(type.key, type.messageOptions)')
                .badge.badge-info.stack-count {{user.items.special[received].length}}

    .col-md-6.border-left
      h2=env.t('market')
      .npc_alex_container
        .pull-left-sm.col-centered(class="#{env.worldDmg.market ? 'npc_alex_broken' : 'npc_alex'}")
        .popover.static-popover.fade.right.in.pull-left-sm
          .arrow.hidden-xs
          h3.popover-title
            a(target='_blank', href='http://www.kickstarter.com/profile/523661924')=env.t('alexander')
          .popover-content
            p=env.t('welcomeMarket')
            hr(ng-show='selectedEgg || selectedPotion || selectedFood')
            div(ng-show='selectedEgg || selectedPotion || selectedFood')
              .pull-left.customize-option(class='Pet_Egg_{{selectedEgg.key}}' ng-show='selectedEgg')
              p(ng-show='selectedEgg')
                !=env.t('displayEggForGold', {itemType: "{{selectedEgg.text()}}"})
              .pull-left.customize-option(class='Pet_HatchingPotion_{{selectedPotion.key}}' ng-show='selectedPotion')
              p(ng-show='selectedPotion')
                !=env.t('displayPotionForGold', {itemType: "{{selectedPotion.text()}}"})
              .pull-left.customize-option(class='Pet_Food_{{selectedFood.key}}' ng-show='selectedFood')
              p(ng-show='selectedFood')
                !=env.t('displayItemForGold', {itemType: "{{selectedFood.text()}}"})
            .clearfix
              button.btn.btn-primary.btn-block(ng-show='selectedEgg', ng-click='sellInventory()')=env.t('sellForGold', {itemType: "{{selectedEgg.text()}}", gold: "{{selectedEgg.value}}"})
              button.btn.btn-primary.btn-block(ng-show='selectedPotion', ng-click='sellInventory()')=env.t('sellForGold', {itemType: "{{selectedPotion.text()}}", gold: "{{selectedPotion.value}}"})
              button.btn.btn-primary.btn-block(ng-show='selectedFood', ng-click='sellInventory()')=env.t('sellForGold', {item: "{{selectedFood.text()}}", gold: "{{selectedFood.value}}"})

      menu.inventory-list(type='list')
        li.customize-menu
          menu.pets-menu(label=env.t('eggs'))
            p.muted!=env.t('dropsExplanation')

            div(ng-repeat='egg in Content.eggs', ng-if='egg.canBuy(user)')
              button.customize-option(class='Pet_Egg_{{::egg.key}}',
                popover='{{::egg.notes()}}', popover-append-to-body='true',
                popover-title!=env.t("egg", {eggType: "{{::egg.text()}}"}),
                popover-trigger='mouseenter', popover-placement='top',
                ng-click='purchase("eggs", egg)')
              p {{::egg.value}}&nbsp;
                span.Pet_Currency_Gem1x.inline-gems

        li.customize-menu
          menu.pets-menu(label=env.t('hatchingPotions'))
            p.muted!=env.t('dropsExplanation')
            div(ng-repeat='pot in Content.hatchingPotions', ng-if='!pot.premium')
              button.customize-option(class='Pet_HatchingPotion_{{::pot.key}}',
                popover='{{::pot.notes()}}', popover-append-to-body='true',
                popover-title!=env.t("potion", {potionType: "{{::pot.text()}}"}),
                popover-trigger='mouseenter', popover-placement='top',
                ng-click='purchase("hatchingPotions", pot)')
              p
                |  {{::pot.value}}&nbsp;
                span.Pet_Currency_Gem1x.inline-gems

        // li.customize-menu
          menu.pets-menu!=env.t('magicHatchingPotions') + " - " + env.t('winterEventAvailability')
            p.muted=env.t('premiumPotionNoDropExplanation')
            div(ng-repeat='pot in Content.hatchingPotions', ng-if='pot.premium && pot.canBuy(user)')
              button.customize-option(class='Pet_HatchingPotion_{{::pot.key}}',
                popover='{{::pot.notes()}} {{::pot.addlNotes()}}', popover-append-to-body='true',
                popover-title!=env.t("potion", {potionType: "{{::pot.text()}}"}),
                popover-trigger='mouseenter', popover-placement='top',
                ng-click='purchase("hatchingPotions", pot)')
              p
                | {{::pot.value}}&nbsp;
                span.Pet_Currency_Gem1x.inline-gems

        li.customize-menu
          menu.pets-menu(label=env.t('food'))
            p.muted!=env.t('dropsExplanation')
            div(ng-repeat='food in Content.food', ng-if='food.canBuy(user)')
              button.customize-option(class='Pet_Food_{{::food.key}}',
                popover='{{::food.notes()}}', popover-title='{{::food.text()}}',
                popover-trigger='mouseenter', popover-placement='top',
                popover-append-to-body='true',
                ng-click='purchase("food", food)')
              p
                |  {{::food.value}}&nbsp;
                span.Pet_Currency_Gem1x.inline-gems

        li.customize-menu
          menu.pets-menu(label=env.t('quests'))
            p=env.t('whereAreMyQuests')

        li.customize-menu
          menu.pets-menu(label=env.t('special'))
            div
              button.customize-option(class='inventory_special_fortify',
                popover=env.t('fortifyPop'),
                popover-title=env.t('fortifyName'),
                popover-trigger='mouseenter', popover-placement='top',
                popover-append-to-body='true',
                ng-click='openModal("reroll")')
              p
                | 4&nbsp;
                span.Pet_Currency_Gem1x.inline-gems
            div(ng-show='user.flags.rebirthEnabled')
              button.customize-option(class='rebirth_orb',
                popover=env.t('rebirthPop'), popover-title=env.t('rebirthName'),
                popover-trigger='mouseenter', popover-placement='top',
                popover-append-to-body='true',
                ng-click='openModal("rebirth")')
              p(ng-show='user.stats.lvl < 100')
                | 8&nbsp;
                span.Pet_Currency_Gem1x.inline-gems
            div(ng-show='petCount >= 90 || mountCount >= 90')
              button.customize-option(popover=env.t('petKeyPop'), popover-title=env.t('petKeyName'),
                popover-trigger='mouseenter', popover-placement='top',
                popover-append-to-body='true',
                ng-click='openModal("pet-key", {size:"lg", controller:"InventoryCtrl"})', class='pet_key')
              p(ng-show='petCount < 90 || mountCount < 90 || !user.achievements.triadBingo')
                | 4&nbsp;
                span.Pet_Currency_Gem1x.inline-gems
            div(ng-if='user.purchased.plan.customerId', ng-class='::{transparent:(Shared.planGemLimits.convCap + User.user.purchased.plan.consecutive.gemCapExtra - User.user.purchased.plan.gemsBought) < 1}')
              button.customize-option(popover=env.t('subGemPop'), popover-title=env.t('subGemName'),
                popover-trigger='mouseenter', popover-placement='top',
                popover-append-to-body='true',
                ng-click='user.ops.purchase({params:{type:"gems",key:"gem"}})')
                span.Pet_Currency_Gem.inline-gems
                .badge.badge-success.stack-count {{Shared.planGemLimits.convCap + User.user.purchased.plan.consecutive.gemCapExtra - User.user.purchased.plan.gemsBought}}
              p
                | 20&nbsp;
                span.shop_gold
            div(ng-repeat='type in Content.cardTypes', ng-show='type.yearRound')
              button.customize-option(class='inventory_special_{{::type.key}}',
              popover='{{::Content.spells.special[type.key].notes()}}',
              popover-title='{{::Content.spells.special[type.key].text()}}',
              popover-trigger='mouseenter', popover-placement='right',
              popover-append-to-body='true',
              ng-click='castStart(Content.spells.special[type.key])')
              p
                | {{Content.spells.special[type.key].value}}
                span(class='shop_gold')
